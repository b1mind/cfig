// 1mind Snippets for JavaScript and its libs
{
	"Console Log": {
		"scope": "javascript,typescript",
		"prefix": "cl",
		"body": ["console.log($0)"]
	},
	"Console Dir": {
		"scope": "javascript,typescript",
		"prefix": "cdi",
		"body": ["console.dir($0)"]
	},
	"add Event Listener": {
		"scope": "javascript,typescript",
		"prefix": "jel",
		"body": ["${1:object}.addEventListener('${2:event}', $0)"]
	},
	"Get EleById": {
		"scope": "javascript,typescript",
		"prefix": "jid",
		"body": ["const ${1:name} = document.getElementById('${1:id}$0')"]
	},
	"Query Selector": {
		"scope": "javascript,typescript",
		"prefix": "js",
		"body": ["const ${1:name} = document.querySelector('${0:class}')"]
	},
	"Query All": {
		"scope": "javascript,typescript",
		"prefix": "jsa",
		"body": ["const ${1:name} = document.querySelectorAll('${0:class}')"]
	},
	"const Function": {
		"scope": "javascript,typescript",
		"prefix": "jfun",
		"body": ["const ${1:name} = function(${2:params}) {$0}"]
	},
	"const arrow Function": {
		"scope": "javascript,typescript",
		"prefix": "jcaf",
		"body": ["const ${1:name} = (${2:params}) => {$0}"]
	},
	"arrow Function": {
		"scope": "javascript,typescript",
		"prefix": "jaf",
		"body": ["(${1:params}) => {$0}"]
	},
	"Observer": {
		"scope": "javascript,typescript",
		"prefix": "job",
		"body": [
			"const ${1:name}ObsOptions = {",
			"  root: ${2:null},",
			"  threshold: 0,",
			"  rootMargin: '0px 0px 0px 0px',",
			"}",
			"const ${1:name}Observer = new IntersectionObserver(function (entries, observer) {",
			"  entries.forEach(e => {",
			"  ${0}",
			"})",
			"}, ${1:name}ObsOptions)"
		]
	},

	//> Gsap stuffs
	"gsap tween": {
		"scope": "javascript,typescript",
		"prefix": "gsap",
		"body": ["gsap.${1:to}(${2:var}, ${3:1}, {$0})"]
	},
	"gsap timeline": {
		"scope": "javascript,typescript",
		"prefix": "gti",
		"body": ["${1:tl} = gsap.timeline($2)", "${1}", ".${3:to}(${4:var}, ${5:1}, {$0})"]
	},
	"gsap to": {
		"scope": "javascript,typescript",
		"prefix": "gto",
		"body": [".to(${1:var}, ${2:1}, {$3}, $0)"]
	},
	"gsap fromTo": {
		"scope": "javascript,typescript",
		"prefix": "gft",
		"body": [".fromTo(${1:var}, ${2:1}, {$3},{$4}, $0)"]
	}
}
